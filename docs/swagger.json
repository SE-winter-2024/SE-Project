{
    "swagger": "2.0",
    "info": {
        "description": "Software Engineering Course Project",
        "title": "SE Project",
        "contact": {
            "name": "Mahdieh Moghiseh",
            "email": "mahdiehmoghiseh81@gmail.com"
        },
        "version": "1.0"
    },
    "basePath": "/v1",
    "paths": {
        "/trainee/profile/{id}": {
            "get": {
                "description": "Retrieves the profile information of a trainee by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trainee"
                ],
                "summary": "Get trainee profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user",
                        "name": "X-User-ID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trainee profile information",
                        "schema": {
                            "$ref": "#/definitions/dto.TraineeResponse"
                        }
                    },
                    "404": {
                        "description": "Trainee not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the profile information of a trainee by UserID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trainee"
                ],
                "summary": "Edit trainee profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user",
                        "name": "X-User-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Trainee profile data",
                        "name": "trainee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TraineeEdit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated trainee profile",
                        "schema": {
                            "$ref": "#/definitions/dto.TraineeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Trainee not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trainee/request/{id}": {
            "get": {
                "description": "Retrieves the request of a trainee by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trainee"
                ],
                "summary": "Get trainee request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user",
                        "name": "X-User-ID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trainee request",
                        "schema": {
                            "$ref": "#/definitions/dto.RequestsInTrainerPage"
                        }
                    },
                    "404": {
                        "description": "Trainee not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Change request status by trainee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trainee"
                ],
                "summary": "Change request status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user",
                        "name": "X-User-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request Change Status",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TraineeChangeStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trainee Change Status",
                        "schema": {
                            "$ref": "#/definitions/dto.ProgramRequestSetPrice"
                        }
                    },
                    "404": {
                        "description": "Trainee not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new program request with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trainee"
                ],
                "summary": "Create program request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user",
                        "name": "X-User-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Program request data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ProgramRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created program request",
                        "schema": {
                            "$ref": "#/definitions/dto.ProgramRequest"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Invalid user ID or not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trainer/price": {
            "put": {
                "description": "Trainer sets the price for a training request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trainer"
                ],
                "summary": "Set price for a request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user",
                        "name": "X-User-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Trainer Set Price Data",
                        "name": "TrainerSetPrice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TrainerSetPrice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ProgramRequestSetPrice"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trainer/profile/": {
            "get": {
                "description": "get trainees of a trainer by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trainer"
                ],
                "summary": "Get trainees",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user",
                        "name": "X-User-ID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trainer trainees",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.TraineeInTrainerPage"
                            }
                        }
                    },
                    "404": {
                        "description": "Trainer not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trainer/profile/{id}": {
            "get": {
                "description": "Retrieves the profile information of a trainer by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trainer"
                ],
                "summary": "Get trainer profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user",
                        "name": "X-User-ID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trainer profile information",
                        "schema": {
                            "$ref": "#/definitions/dto.TrainerResponse"
                        }
                    },
                    "404": {
                        "description": "Trainer not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the profile information of a trainer by UserID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trainer"
                ],
                "summary": "Edit trainer profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user",
                        "name": "X-User-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Trainer profile data",
                        "name": "trainer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TrainerEdit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated trainer profile",
                        "schema": {
                            "$ref": "#/definitions/dto.TrainerResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Trainer not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trainer/program": {
            "post": {
                "description": "create a training program by trainer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trainer"
                ],
                "summary": "creates a program",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user",
                        "name": "X-User-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Trainer Create Program data",
                        "name": "TrainingProgram",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TrainingProgram"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trainer/program/sport-activity": {
            "put": {
                "description": "add sport activity to program by trainer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trainer"
                ],
                "summary": "add sport activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user",
                        "name": "X-User-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Add Sport Activity data",
                        "name": "SportActivity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddSportActivity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trainer/requests/": {
            "get": {
                "description": "get requests of a trainer by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trainer"
                ],
                "summary": "Get requests",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user",
                        "name": "X-User-ID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trainer requests",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.RequestsInTrainerPage"
                            }
                        }
                    },
                    "404": {
                        "description": "Trainer not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/:id/profile": {
            "get": {
                "description": "get user profile by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get a User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Logs in a user using email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Log in user",
                "parameters": [
                    {
                        "description": "Email and password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LogIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/sign-up": {
            "post": {
                "description": "Signs up a new user with provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Sign up user",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User information",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AddSportActivity": {
            "type": "object",
            "properties": {
                "program_id": {
                    "type": "integer"
                },
                "sport_activity": {
                    "$ref": "#/definitions/dto.SportActivitRequest"
                }
            }
        },
        "dto.LogIn": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.ProgramRequest": {
            "type": "object",
            "required": [
                "active_days",
                "traineeID",
                "trainerID"
            ],
            "properties": {
                "active_days": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "traineeID": {
                    "type": "integer"
                },
                "trainerID": {
                    "type": "integer"
                }
            }
        },
        "dto.ProgramRequestSetPrice": {
            "type": "object",
            "required": [
                "traineeID",
                "trainerID"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "price": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "traineeID": {
                    "type": "integer"
                },
                "trainerID": {
                    "type": "integer"
                }
            }
        },
        "dto.RequestsInTrainerPage": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "trainee_name": {
                    "type": "string"
                }
            }
        },
        "dto.Response": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.SportActivitRequest": {
            "type": "object",
            "properties": {
                "expected_value": {
                    "type": "integer"
                },
                "order_number": {
                    "type": "integer"
                },
                "sport": {
                    "$ref": "#/definitions/dto.SportRequest"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "dto.SportRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "video_id": {
                    "type": "integer"
                }
            }
        },
        "dto.TraineeChangeStatus": {
            "type": "object",
            "properties": {
                "request_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.TraineeEdit": {
            "type": "object",
            "required": [
                "active_days",
                "contact",
                "country",
                "height",
                "language",
                "medicalHistory",
                "sports",
                "status",
                "user_name",
                "weight"
            ],
            "properties": {
                "active_days": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    }
                },
                "contact": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "language": {
                    "type": "string"
                },
                "medicalHistory": {
                    "type": "string"
                },
                "sports": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/dto.UserEdit"
                },
                "user_name": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "dto.TraineeInTrainerPage": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.TraineeProfileCard": {
            "type": "object",
            "properties": {
                "contact": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "wallet": {
                    "type": "integer"
                }
            }
        },
        "dto.TraineeResponse": {
            "type": "object",
            "properties": {
                "health_problems": {
                    "type": "string"
                },
                "sport_experience": {
                    "type": "string"
                },
                "trainee_profile_card": {
                    "$ref": "#/definitions/dto.TraineeProfileCard"
                }
            }
        },
        "dto.TrainerEdit": {
            "type": "object",
            "required": [
                "achievements",
                "active_days",
                "coach_experience",
                "contact",
                "country",
                "education",
                "language",
                "sport",
                "status",
                "user_name"
            ],
            "properties": {
                "achievements": {
                    "type": "string"
                },
                "active_days": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    }
                },
                "coach_experience": {
                    "type": "integer"
                },
                "contact": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "education": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "sport": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/dto.UserEdit"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "dto.TrainerProfileCard": {
            "type": "object",
            "properties": {
                "coach_experience": {
                    "type": "integer"
                },
                "contact": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "dto.TrainerResponse": {
            "type": "object",
            "properties": {
                "achievements": {
                    "type": "string"
                },
                "education": {
                    "type": "string"
                },
                "sports": {
                    "type": "string"
                },
                "trainer_profile_card": {
                    "$ref": "#/definitions/dto.TrainerProfileCard"
                }
            }
        },
        "dto.TrainerSetPrice": {
            "type": "object",
            "required": [
                "price",
                "requestId"
            ],
            "properties": {
                "price": {
                    "type": "integer"
                },
                "rejected": {
                    "type": "boolean"
                },
                "requestId": {
                    "type": "integer"
                }
            }
        },
        "dto.TrainingProgram": {
            "type": "object",
            "required": [
                "end_date",
                "request_id",
                "start_date"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "request_id": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.User": {
            "type": "object",
            "required": [
                "age",
                "email",
                "first_name",
                "gender",
                "info_type",
                "last_name",
                "password",
                "phone_number"
            ],
            "properties": {
                "age": {
                    "type": "integer"
                },
                "block": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "info_id": {
                    "type": "string"
                },
                "info_type": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "phone_number": {
                    "type": "string",
                    "minLength": 11
                },
                "wallet": {
                    "type": "integer"
                }
            }
        },
        "dto.UserEdit": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "block": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "info_id": {
                    "type": "string"
                },
                "info_type": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "wallet": {
                    "type": "integer"
                }
            }
        },
        "dto.UserResponse": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "block": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "info_id": {
                    "type": "string"
                },
                "info_type": {
                    "type": "string"
                },
                "jwt": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "profile": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "wallet": {
                    "type": "integer"
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI"
    }
}