definitions:
  dto.LogIn:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.ProgramRequest:
    properties:
      active_days:
        items:
          type: boolean
        type: array
      description:
        type: string
      id:
        type: integer
      traineeID:
        type: integer
      trainerID:
        type: integer
    required:
    - active_days
    - traineeID
    - trainerID
    type: object
  dto.ProgramRequestSetPrice:
    properties:
      description:
        type: string
      id:
        type: integer
      price:
        type: integer
      status:
        type: string
      traineeID:
        type: integer
      trainerID:
        type: integer
    required:
    - traineeID
    - trainerID
    type: object
  dto.RequestsInTrainerPage:
    properties:
      date:
        type: string
      price:
        type: integer
      status:
        type: string
      trainee_name:
        type: string
    type: object
  dto.TraineeEdit:
    properties:
      active_days:
        items:
          type: boolean
        type: array
      contact:
        type: string
      country:
        type: string
      height:
        type: integer
      language:
        type: string
      medicalHistory:
        type: string
      sports:
        type: string
      status:
        type: string
      user:
        $ref: '#/definitions/dto.User'
      user_name:
        type: string
      weight:
        type: integer
    required:
    - active_days
    - contact
    - country
    - height
    - language
    - medicalHistory
    - sports
    - status
    - user_name
    - weight
    type: object
  dto.TraineeInTrainerPage:
    properties:
      name:
        type: string
    type: object
  dto.TraineeProfileCard:
    properties:
      contact:
        type: string
      country:
        type: string
      email:
        type: string
      language:
        type: string
      status:
        type: string
      userName:
        type: string
      wallet:
        type: integer
    type: object
  dto.TraineeResponse:
    properties:
      health_problems:
        type: string
      sport_experience:
        type: string
      trainee_profile_card:
        $ref: '#/definitions/dto.TraineeProfileCard'
    type: object
  dto.TrainerEdit:
    properties:
      achievements:
        type: string
      active_days:
        items:
          type: boolean
        type: array
      coach_experience:
        type: integer
      contact:
        type: string
      country:
        type: string
      education:
        type: string
      language:
        type: string
      sport:
        type: string
      status:
        type: string
      user:
        $ref: '#/definitions/dto.User'
      user_name:
        type: string
    required:
    - achievements
    - active_days
    - coach_experience
    - contact
    - country
    - education
    - language
    - sport
    - status
    - user_name
    type: object
  dto.TrainerProfileCard:
    properties:
      coach_experience:
        type: integer
      contact:
        type: string
      country:
        type: string
      email:
        type: string
      language:
        type: string
      status:
        type: string
      user_name:
        type: string
    type: object
  dto.TrainerResponse:
    properties:
      achievements:
        type: string
      education:
        type: string
      sports:
        type: string
      trainer_profile_card:
        $ref: '#/definitions/dto.TrainerProfileCard'
    type: object
  dto.TrainerSetPrice:
    properties:
      price:
        type: integer
      rejected:
        type: boolean
      requestId:
        type: integer
    required:
    - price
    - requestId
    type: object
  dto.User:
    properties:
      age:
        type: integer
      block:
        type: boolean
      email:
        type: string
      first_name:
        type: string
      gender:
        type: string
      id:
        type: integer
      info_id:
        type: string
      info_type:
        type: string
      last_name:
        type: string
      password:
        minLength: 8
        type: string
      phone_number:
        minLength: 11
        type: string
      wallet:
        type: integer
    required:
    - age
    - email
    - first_name
    - gender
    - last_name
    - password
    - phone_number
    type: object
  dto.UserResponse:
    properties:
      block:
        type: boolean
      email:
        type: string
      first_name:
        type: string
      info_id:
        type: string
      info_type:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      type:
        type: string
      wallet:
        type: integer
    type: object
info:
  contact: {}
paths:
  /trainee/profile/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves the profile information of a trainee by ID
      parameters:
      - description: Trainee ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Trainee profile information
          schema:
            $ref: '#/definitions/dto.TraineeResponse'
        "404":
          description: Trainee not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get trainee profile
      tags:
      - trainee
    put:
      consumes:
      - application/json
      description: Updates the profile information of a trainee by UserID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Trainee profile data
        in: body
        name: trainer
        required: true
        schema:
          $ref: '#/definitions/dto.TraineeEdit'
      produces:
      - application/json
      responses:
        "200":
          description: Updated trainee profile
          schema:
            $ref: '#/definitions/dto.TraineeResponse'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "404":
          description: Trainee not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Edit trainee profile
      tags:
      - trainee
  /trainee/request/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves the request of a trainee by ID
      parameters:
      - description: Trainee ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Trainee request
          schema:
            $ref: '#/definitions/dto.RequestsInTrainerPage'
        "404":
          description: Trainee not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get trainee request
      tags:
      - trainee
    post:
      consumes:
      - application/json
      description: Creates a new program request with the provided data
      parameters:
      - description: Trainee ID
        in: path
        name: id
        required: true
        type: string
      - description: Program request data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ProgramRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Created program request
          schema:
            $ref: '#/definitions/dto.ProgramRequest'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "404":
          description: Invalid user ID or not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create program request
      tags:
      - trainee
  /trainer/price:
    put:
      consumes:
      - application/json
      description: Trainer sets the price for a training request
      parameters:
      - description: Trainer Set Price Data
        in: body
        name: TrainerSetPrice
        required: true
        schema:
          $ref: '#/definitions/dto.TrainerSetPrice'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProgramRequestSetPrice'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Set price for a request
      tags:
      - Trainer
  /trainer/profile/{id}:
    get:
      consumes:
      - application/json
      description: get trainees of a trainer by ID
      parameters:
      - description: Trainer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Trainer trainees
          schema:
            items:
              $ref: '#/definitions/dto.TraineeInTrainerPage'
            type: array
        "404":
          description: Trainer not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get trainees
      tags:
      - trainer
    put:
      consumes:
      - application/json
      description: Updates the profile information of a trainer by UserID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Trainer profile data
        in: body
        name: trainer
        required: true
        schema:
          $ref: '#/definitions/dto.TrainerEdit'
      produces:
      - application/json
      responses:
        "200":
          description: Updated trainer profile
          schema:
            $ref: '#/definitions/dto.TrainerResponse'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "404":
          description: Trainer not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Edit trainer profile
      tags:
      - trainer
  /trainer/requests/{id}:
    get:
      consumes:
      - application/json
      description: get requests of a trainer by ID
      parameters:
      - description: Trainer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Trainer requests
          schema:
            items:
              $ref: '#/definitions/dto.RequestsInTrainerPage'
            type: array
        "404":
          description: Trainer not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get requests
      tags:
      - trainer
  /user/login:
    post:
      consumes:
      - application/json
      description: Logs in a user using email and password
      parameters:
      - description: Email and password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LogIn'
      produces:
      - application/json
      responses:
        "200":
          description: User information
          schema:
            $ref: '#/definitions/dto.UserResponse'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Log in user
      tags:
      - user
  /user/sign-up:
    post:
      consumes:
      - application/json
      description: Signs up a new user with provided details
      parameters:
      - description: User details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.User'
      produces:
      - application/json
      responses:
        "200":
          description: User information
          schema:
            $ref: '#/definitions/dto.User'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Sign up user
      tags:
      - user
swagger: "2.0"
